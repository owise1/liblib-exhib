var _pl={db:"liblib",design:"liblib-exhib"};window.URL=window.URL||window.webkitURL;var LibLibExhibApp=angular.module("LibLibExhibApp",["CornerCouch","ngSanitize"]).config(["$compileProvider",function(i){var e=/^\s*(https?|blob):/;i.aHrefSanitizationWhitelist(e),i.imgSrcSanitizationWhitelist(e)}]);LibLibExhibApp.controller("ListingCtrl",["$scope","$http","cornercouch",function(i,e,n){function o(){i.db.newDoc().load(a).success(function(e){i.exhibitionDoc=e}).error(function(){i.db.newDoc({_id:a}).save().success(o).error(function(i){console.log("error 2"),console.log(i)})})}function t(){i.db.query(r.design,"media",{reduce:!1,limit:10,include_docs:!0}).success(function(e){i.medias=e.rows.map(R.prop("doc")).map(c)})}function c(i){return i._attachments&&angular.forEach(i._attachments,function(e,n){/^cover\./.test(n)?i.coverImg="/"+r.db+"/"+i._id+"/"+n:(i.media=e,i.media.url="/"+r.db+"/"+i._id+"/"+n)}),i}var r=window._pl;i.db=n().getDB(r.db);var a="liblib-exhib-exhibition";o(),i.upload=function(e){for(var n,o=[],c=0;n=e.files[c];c++)o.push(n);o.forEach(function(e){var n=i.db.newDoc({name:e.name,content_type:e.type});n.save().success(function(){n.attach(e,e.name,t)})})},i.del=function(e){i.db.newDoc(e).remove().success(t)},i.save=function(e){var n=e.file;if(n){delete e.file;var o=i.db.newDoc(e);o.save().success(function(){o.attach(n,"cover."+n.name.split(".").pop(),t)})}else i.db.newDoc(e).save().success(t)},t()}]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(i,e){e.bind("change",function(e){i.$apply(function(){i.fileread=e.target.files[0]})})}}}]).filter("sanitize",["$sce",function(i){return function(e){return i.trustAsHtml(e)}}]);